#!/usr/bin/env python3
import argparse
import os
import shutil
from pathlib import Path

from utils import gen_naming_scheme

DAY = gen_naming_scheme()
ARCHIVED = Path("./archived/")

def parse_args():
    parser = argparse.ArgumentParser()

    parser.description = (
        f"""Get out of my way! I don't want to deal with you!
        Move files into {ARCHIVED}"""
    )

    parser.add_argument("targets", nargs="+", help="files to move")

    parser.add_argument(
        "--dry",
        "-d",
        action="store_true",
        help="Dry run.",
    )

    parser.add_argument("--unarchive",
                        "-d",
                        action="store_true",
                        help="Undo action.")

    return parser.parse_args()


if __name__ == "__main__":

    args = parse_args()

    DRY = args.dry
    TARGETS = args.targets
    UNARCHIVE = args.unarchive

    destination = ARCHIVED / DAY

    try:
        if DRY:
            print(f"{destination} would've been created.")
        else:
            destination.mkdir(parents=True)
    except FileExistsError:
        pass # Failing downstream? if destination is a file

    for target in TARGETS:
        target = Path(target)
        if target == ARCHIVED: continue
        if DRY:
            print(f"{target} would've been moved to {destination})")
        elif not UNARCHIVE:
            shutil.move(target, destination)


    HISTORY_FILE = Path('./archived/.archive_history.pickle')

    # Write to the stack,
    # last element. It grows and shrink by the right.
    from collections import deque
    if UNARCHIVE:
        # POP operation
        try:
            with open(HISTORY_FILE, 'rb') as hfile:
                stackde
            utargets = stacked_history.pop()
            for
        except FileNotFoundError as e:
            print("Nothing to unarchive.", file=sys.stderr)
        except IndexError as e:
            print("Nothing to unarchive.", file=sys.stderr)
    else:
        # PUSH (append) operation

    # I am going to use pickle
    # Delete from the stack
    # a menos que tuviera un yaml dump

    # Write to the stack, using pickle?, is even easier, ...
    # read to the stack, using pickle? , is even easier, ...
